"""
1
単純なインデックス
"""

type Group @model @auth(rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  name: String!
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listGroupsByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type User @model @auth(rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  name: String!
  bornedDate: AWSDate!
  groupId: String! @index(name: "byGroupId", queryField: "listUsersByGroupId")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listUsersByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type BookCategory @model @auth (rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  name: String!
  groupId: String! @index(name: "byGroupId", queryField: "listBookCategoriesByGroupId")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listBookCategoriesByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type Book @model @auth (rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  name: String!
  categoryId: String!
  groupId: String! @index(name: "byGroupId", queryField: "listBooksByGroupId")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listBooksByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type Comment @model @auth (rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  contents: String!
  groupId: String! @index(name: "byGroupId", queryField: "listCommentsByGroupId")
  userId: String! @index(name: "byUserId", queryField: "listCommentsByUserId")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listCommentsByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type Message @model @auth (rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  contents: String!
  groupId: String! @index(name: "byGroupId", queryField: "listMessagesByGroupId")
  from: String! @index(name: "byFrom", queryField: "listMessagesByFrom")
  to: String! @index(name: "byTo", queryField: "listMessagesByTo")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listMessagesByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type Schedule @model @auth (rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  comment: String!
  startedAt: AWSDateTime!
  finishedAt: AWSDateTime!
  groupId: String! @index(name: "byGroupId", queryField: "listSchedulesByGroupId")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listSchedulesByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type PostCategory @model @auth (rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  name: String!
  groupId: String! @index(name: "byGroupId", queryField: "listPostCategoriesByGroupId")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listPostCategoriesByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type Post @model @auth (rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  title: String!
  contents: String!
  categoryId: String! @index(name: "byCategoryId", queryField: "listPostsByCategoryId")
  groupId: String! @index(name: "byGroupId", queryField: "listPostsByGroupId")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listPostsByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}

type Todo @model @auth (rules: [
  { allow: owner, operations: [create, update, delete, read] }
]) {
  id: ID!
  title: String!
  done: Boolean!
  groupId: String! @index(name: "byGroupId", queryField: "listTodosByGroupId")
  createdAt: AWSDateTime! @index(name: "byCreatedAt", queryField: "listTodosByCreatedAt")
  owner: String @auth(rules: [{ allow: owner, operations: [read]}])
}
